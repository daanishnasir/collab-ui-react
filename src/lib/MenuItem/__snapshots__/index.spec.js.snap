// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tests for <MenuItem /> should render a MenuItem 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MenuItem
    className=""
    index={null}
    isHeader={false}
    isOpen={false}
    keepMenuOpen={false}
    label="one"
    onClick={null}
    value=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "aria-expanded": false,
      "aria-haspopup": false,
      "children": <ListItem
        active={false}
        className=""
        customAnchorNode={null}
        customRefProp=""
        disabled={false}
        focus={false}
        focusOnLoad={true}
        id={null}
        isReadOnly={false}
        itemIndex={null}
        label=""
        link=""
        onClick={[Function]}
        onKeyDown={[Function]}
        refName="navLink"
        role="menuitem"
        separator={false}
        title=""
        type=""
        value=""
      >
        one
      </ListItem>,
      "className": "cui-menu-item",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "active": false,
        "children": "one",
        "className": "",
        "customAnchorNode": null,
        "customRefProp": "",
        "disabled": false,
        "focus": false,
        "focusOnLoad": true,
        "id": null,
        "isReadOnly": false,
        "itemIndex": null,
        "label": "",
        "link": "",
        "onClick": [Function],
        "onKeyDown": [Function],
        "refName": "navLink",
        "role": "menuitem",
        "separator": false,
        "title": "",
        "type": "",
        "value": "",
      },
      "ref": [Function],
      "rendered": "one",
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "aria-expanded": false,
        "aria-haspopup": false,
        "children": <ListItem
          active={false}
          className=""
          customAnchorNode={null}
          customRefProp=""
          disabled={false}
          focus={false}
          focusOnLoad={true}
          id={null}
          isReadOnly={false}
          itemIndex={null}
          label=""
          link=""
          onClick={[Function]}
          onKeyDown={[Function]}
          refName="navLink"
          role="menuitem"
          separator={false}
          title=""
          type=""
          value=""
        >
          one
        </ListItem>,
        "className": "cui-menu-item",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "active": false,
          "children": "one",
          "className": "",
          "customAnchorNode": null,
          "customRefProp": "",
          "disabled": false,
          "focus": false,
          "focusOnLoad": true,
          "id": null,
          "isReadOnly": false,
          "itemIndex": null,
          "label": "",
          "link": "",
          "onClick": [Function],
          "onKeyDown": [Function],
          "refName": "navLink",
          "role": "menuitem",
          "separator": false,
          "title": "",
          "type": "",
          "value": "",
        },
        "ref": [Function],
        "rendered": "one",
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "prevContext": true,
          },
        },
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
